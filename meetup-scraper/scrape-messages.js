// Generated by CoffeeScript 1.7.1

/*
 * fileOverview

  ___  ____  ____ _____ ____  _____
 /___)/ ___)/ ___|____ |  _ \| ___ |
|___ ( (___| |   / ___ | |_| | ____|
(___/ \____)_|   \_____|  __/|_____)
                       |_|

 ____  _____  ___  ___ _____  ____ _____  ___
|    \| ___ |/___)/___|____ |/ _  | ___ |/___)
| | | | ____|___ |___ / ___ ( (_| | ____|___ |
|_|_|_|_____|___/(___/\_____|\___ |_____|___/
                            (_____|

 *# description

Basic HTTP GETs for archive data grokable from meetup.com.
 */

(function() {
  var cheerio, client, count, elastical, get_full_message, get_partial_message, group, page, request, save_to_es, start, url;

  request = require('request');

  cheerio = require('cheerio');

  elastical = require('elastical');

  client = new elastical.Client;

  group = process.argv[2];

  page = process.argv[3] ? process.argv[3] : 1;

  url = 'http://www.meetup.com/' + group + '/messages/archive/?offset=' + (page - 1) * 100;

  count = 0;

  start = process.hrtime();

  save_to_es = function(record) {

    /*
    Save to ES.
    
    @param {object} record
     */
    client.index('meetup_message_archive', 'message', record, function(err, res) {
      if (!err) {
        console.log('The message "{record.topic}" was successfully saved.');
      }
    });
  };

  get_partial_message = function(url, topic) {

    /*
    Get Partial Message.
    
    @param {string} url
    @param {string} topic
     */
    request(url, function(error, response, body) {
      var $, date_sent, from, from_url, message_body, result;
      if (!error && response.statusCode === 200) {
        $ = cheerio.load(body, {
          ignoreWhitespace: true
        });
        from = void 0;
        from_url = void 0;
        date_sent = void 0;
        message_body = void 0;
        $('div.D_mailHead table tr:nth-child(1) td:nth-child(2)').each(function() {
          from = $(this).text().trim();
          from_url = $(this).find('a').attr('href');
        });
        $('div.D_mailHead table tr:nth-child(2) td:nth-child(2)').each(function() {
          date_sent = $(this).text().trim();
        });
        message_body = $('div.D_mailBody').html();
        console.log(count);
        result = {
          'group': group,
          'topic': topic,
          'from': from,
          'from_url': from_url,
          'date_sent': date_sent,
          'message_body': message_body
        };
        console.log(result);
        console.log(JSON.stringify(result));
        console.log('--------');
        count++;
      }
    });
  };

  get_full_message = function(url) {

    /*
    Get Full Message.
    
    @param {string} url
     */
    request(url, function(error, response, body) {
      var $, date_sent, from, from_url, message_body, result, topic;
      if (!error && response.statusCode === 200) {
        $ = cheerio.load(body, {
          ignoreWhitespace: true
        });
        topic = $('div.D_boxhead h1').first().text();
        from = void 0;
        from_url = void 0;
        date_sent = void 0;
        message_body = void 0;
        if ($('iframe#mailBody').length === 0) {
          $('div.D_mailHead table tr:nth-child(1) td:nth-child(2)').each(function() {
            from = $(this).text().trim();
            from_url = $(this).find('a').attr('href');
          });
          $('div.D_mailHead table tr:nth-child(2) td:nth-child(2)').each(function() {
            date_sent = $(this).text().trim();
          });
          message_body = $('div.D_mailBody').html();
          console.log(count);
          result = {
            'group': group,
            'topic': topic,
            'from': from,
            'from_url': from_url,
            'date_sent': date_sent,
            'message_body': message_body
          };
          console.log(JSON.stringify(result));
          console.log('--------');
          count++;
        } else {
          get_partial_message($('iframe#mailBody').attr('src'), topic);
        }
      }
    });
  };

  request(url, function(error, response, body) {
    var $;
    if (!error && response.statusCode === 200) {
      $ = cheerio.load(body, {
        ignoreWhitespace: true
      });
      $('td.wrapNice > a').each(function() {
        get_full_message($(this).attr('href'));
      });
    } else {
      console.log(error);
    }
  });

}).call(this);
