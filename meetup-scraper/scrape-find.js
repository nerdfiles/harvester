// Generated by CoffeeScript 1.7.1

/*
 * fileOverview

                                          ___ _           _
                                         / __|_)         | |
  ___  ____  ____ _____ ____  _____    _| |__ _ ____   __| |
 /___)/ ___)/ ___|____ |  _ \| ___ |  (_   __) |  _ \ / _  |
|___ ( (___| |   / ___ | |_| | ____|    | |  | | | | ( (_| |
(___/ \____)_|   \_____|  __/|_____)    |_|  |_|_| |_|\____|
                       |_|

 *# description

Basic HTTP GETs for metadata grokable from meetup.com.
 */

(function() {
  var allMeetups, allMeetups_prefix, baseUrl, baseUrlConstruct, cheerio, client, count, elastical, get_page_metadata, group, keywords, keywords_prefix, mcId, mcId_prefix, mcName, mcName_prefix, page, parameterConstruct, radius, radius_prefix, request, sort, sort_prefix, start, url, userFreeform, userFreeform_prefix;

  request = require('request');

  cheerio = require('cheerio');

  elastical = require('elastical');

  client = new elastical.Client;

  group = process.argv[2];

  page = process.argv[3] ? process.argv[3] : 1;


  /*
  @example http://www.meetup.com/find/?allMeetups=false&keywords=bitcoin&radius=Infinity&userFreeform=nerdfiles%40gmail.com&mcId=z77001&mcName=Houston%2C+TX&sort=default
   */

  allMeetups = 'true';

  allMeetups_prefix = 'allMeetups=';

  keywords = 'bitcoin';

  keywords_prefix = 'keywords=';

  radius_prefix = 'radius=';

  radius = 'Infinity';

  userFreeform_prefix = 'userFreeform=';

  userFreeform = 'nerdfiles%40gmail.com';

  mcId_prefix = 'mcId=';

  mcId = 'z77001';

  mcName_prefix = 'mcName=';

  mcName = 'Houston%2C+TX';

  sort_prefix = 'sort=';

  sort = 'default';

  baseUrl = 'http://www.meetup.com/find/';

  parameterConstruct = [allMeetups_prefix + allMeetups, keywords_prefix + keywords, radius_prefix + radius, userFreeform_prefix + userFreeform, mcId_prefix + mcId, mcName_prefix + mcName, sort_prefix + sort].join('&');

  baseUrlConstruct = [baseUrl, parameterConstruct].join('?');

  url = baseUrlConstruct;

  count = 0;

  start = process.hrtime();

  get_page_metadata = function(url) {

    /*
    Page metadata.
     */
    request(url, function(error, response, body) {
      var $, topic;
      if (!error && response.statusCode === 200) {
        $ = cheerio.load(body, {
          ignoreWhitespace: true
        });
        topic = $('ul.searchResults').text();
      }
    });
  };

  request(url, function(error, response, body) {
    var $, a$;
    if (!error && response.statusCode === 200) {
      $ = cheerio.load(body, {
        ignoreWhitespace: true
      });
      a$ = $('a[href*="bitcoin"]');
      a$.each(function() {
        var this$;
        this$ = $(this);
        console.log(this$.text());
        console.log(this$.attr('href'));
      });
    } else {
      console.log(error);
    }
  });

}).call(this);
